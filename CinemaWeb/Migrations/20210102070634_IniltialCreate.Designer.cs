// <auto-generated />
using System;
using CinemaWeb.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CinemaWeb.Migrations
{
    [DbContext(typeof(DPContext))]
    [Migration("20210102070634_IniltialCreate")]
    partial class IniltialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.BinhLuanModel", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("MaPhim")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDang")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasIndex("Email");

                    b.HasIndex("MaPhim");

                    b.ToTable("BinhLuan");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.GheModel", b =>
                {
                    b.Property<int>("MaGhe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int");

                    b.Property<string>("TenGhe")
                        .IsRequired()
                        .HasColumnType("char(5)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaGhe");

                    b.HasIndex("MaPhong");

                    b.ToTable("Ghe");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.HoaDonModel", b =>
                {
                    b.Property<int>("MaHD")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Ngay")
                        .HasColumnType("datetime2");

                    b.Property<int>("TongTien")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.Property<string>("VeDaDat")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaHD");

                    b.HasIndex("Email");

                    b.ToTable("HoaDon");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.LichChieuModel", b =>
                {
                    b.Property<int>("MaLichChieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("MaPhim")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayChieu")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoGheTrong")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaLichChieu");

                    b.HasIndex("MaPhim");

                    b.HasIndex("MaPhong");

                    b.ToTable("LichChieu");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.PhimModel", b =>
                {
                    b.Property<int>("MaPhim")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DaoDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("NgayKhoiChieu")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("QuocGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TenPhim")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("TheLoai")
                        .HasColumnType("int");

                    b.Property<string>("ThoiLuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Trailer")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaPhim");

                    b.HasIndex("TheLoai");

                    b.ToTable("Phim");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.PhongChieuModel", b =>
                {
                    b.Property<int>("MaPhong")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("SoGhe")
                        .HasColumnType("int");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaPhong");

                    b.ToTable("PhongChieu");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.TaiKhoanModel", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LoaiTK")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("Email");

                    b.ToTable("TaiKhoan");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.TheloaiModel", b =>
                {
                    b.Property<int>("MaLoai")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("MaLoai");

                    b.ToTable("TheLoai");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.VeModel", b =>
                {
                    b.Property<int>("MaVe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Gia")
                        .HasColumnType("int");

                    b.Property<int>("MaGhe")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhim")
                        .HasColumnType("int");

                    b.Property<int?>("MaPhong")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayMua")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SuatChieu")
                        .HasColumnType("int");

                    b.HasKey("MaVe");

                    b.HasIndex("Email");

                    b.HasIndex("MaGhe");

                    b.HasIndex("MaPhim");

                    b.HasIndex("MaPhong");

                    b.HasIndex("SuatChieu");

                    b.ToTable("Ve");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.BinhLuanModel", b =>
                {
                    b.HasOne("CinemaWeb.Areas.Admin.Models.TaiKhoanModel", "email")
                        .WithMany()
                        .HasForeignKey("Email");

                    b.HasOne("CinemaWeb.Areas.Admin.Models.PhimModel", "maphim")
                        .WithMany()
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("email");

                    b.Navigation("maphim");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.GheModel", b =>
                {
                    b.HasOne("CinemaWeb.Areas.Admin.Models.PhongChieuModel", "maphong")
                        .WithMany("ListPhongChieu_Ghe")
                        .HasForeignKey("MaPhong");

                    b.Navigation("maphong");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.HoaDonModel", b =>
                {
                    b.HasOne("CinemaWeb.Areas.Admin.Models.TaiKhoanModel", "email")
                        .WithMany("ListTaiKhoan_HoaDon")
                        .HasForeignKey("Email");

                    b.Navigation("email");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.LichChieuModel", b =>
                {
                    b.HasOne("CinemaWeb.Areas.Admin.Models.PhimModel", "maphim")
                        .WithMany("ListPhim_LichChieu")
                        .HasForeignKey("MaPhim");

                    b.HasOne("CinemaWeb.Areas.Admin.Models.PhongChieuModel", "maphong")
                        .WithMany("ListPhongChieu_LichChieu")
                        .HasForeignKey("MaPhong");

                    b.Navigation("maphim");

                    b.Navigation("maphong");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.PhimModel", b =>
                {
                    b.HasOne("CinemaWeb.Areas.Admin.Models.TheloaiModel", "theloai")
                        .WithMany("ListTheLoai_Phim")
                        .HasForeignKey("TheLoai");

                    b.Navigation("theloai");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.VeModel", b =>
                {
                    b.HasOne("CinemaWeb.Areas.Admin.Models.TaiKhoanModel", "email")
                        .WithMany("ListTaiKhoan_Ve")
                        .HasForeignKey("Email");

                    b.HasOne("CinemaWeb.Areas.Admin.Models.GheModel", "maghe")
                        .WithMany("ListGhe_Ve")
                        .HasForeignKey("MaGhe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaWeb.Areas.Admin.Models.PhimModel", "maphim")
                        .WithMany("ListPhim_Ve")
                        .HasForeignKey("MaPhim");

                    b.HasOne("CinemaWeb.Areas.Admin.Models.PhongChieuModel", "maphong")
                        .WithMany("ListPhongChieu_Ve")
                        .HasForeignKey("MaPhong");

                    b.HasOne("CinemaWeb.Areas.Admin.Models.LichChieuModel", "suatchieu")
                        .WithMany("ListLichChieu_Ve")
                        .HasForeignKey("SuatChieu");

                    b.Navigation("email");

                    b.Navigation("maghe");

                    b.Navigation("maphim");

                    b.Navigation("maphong");

                    b.Navigation("suatchieu");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.GheModel", b =>
                {
                    b.Navigation("ListGhe_Ve");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.LichChieuModel", b =>
                {
                    b.Navigation("ListLichChieu_Ve");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.PhimModel", b =>
                {
                    b.Navigation("ListPhim_LichChieu");

                    b.Navigation("ListPhim_Ve");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.PhongChieuModel", b =>
                {
                    b.Navigation("ListPhongChieu_Ghe");

                    b.Navigation("ListPhongChieu_LichChieu");

                    b.Navigation("ListPhongChieu_Ve");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.TaiKhoanModel", b =>
                {
                    b.Navigation("ListTaiKhoan_HoaDon");

                    b.Navigation("ListTaiKhoan_Ve");
                });

            modelBuilder.Entity("CinemaWeb.Areas.Admin.Models.TheloaiModel", b =>
                {
                    b.Navigation("ListTheLoai_Phim");
                });
#pragma warning restore 612, 618
        }
    }
}
